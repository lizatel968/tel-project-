#include <iostream>
#include <vector>
#include <string>
using namespace std;

int m(char a, char b)
{
  if(a!= b)
  {
    return 1;
  }
else return 0;
}

int levenshtein(string a, string b)
{
  int L,T;
  L=a.length();
  N=b.length();
  
  vector<vector<int>>D(L, vector<int>(T));
  for(int i = 0; i < L; ++i)
  {
    for(int j = 0;j < T; ++j)
    {
      D[i][j] = 0;
    }
  }
  for(int j = 1; j < T; ++j)
  {
    D[0][j] = D[0][j - 1] + 15;
  }
  
  for(int i = 1; i < L; ++i)
  {
    D[i][0] = D[i - 1][0] + 20;
    {
      for(int j = 1; j < T; ++j)
      {
        D[i][j] = min(min(D[i - 1][j] + 20, D[i][j -1] + 15), D[i - 1][j - 1] + m(a[i],b[j]));
        
      }
    } 
  }
  
  return D[L-1][T-1];
  
}

int main()
{
  string a, b;
  cin>>a>>b;
  
  cout<<levenshtein(a, b);
  
  return 0;
}
